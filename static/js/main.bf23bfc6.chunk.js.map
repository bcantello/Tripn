{"version":3,"sources":["Components/header.js","Components/StartingLocationsForm.js","Components/Home.js","Components/Waypoints/Waypoints.js","Components/Waypoints/WaypointListItem.js","Components/Waypoints/WaypointList.js","Components/Waypoints/WaypointsUI.js","Components/Directions/DirectionsListItem.js","Components/Directions/DirectionsList.js","Components/Directions/Directions.js","Components/About.js","Components/Main.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","to","style","textDecoration","id","onClick","reset","withRouter","useState","startingLocation","setStartingLocation","endingLocation","setEndingLocation","waypointRoute","setWaypointRoute","onSubmit","e","preventDefault","handleSubmit","className","type","placeholder","value","onChange","location","target","Home","universalProps","useContext","UniversalProps","setEndPoints","handleEndpointsSubmit","Waypoints","input","setInput","handleWaypointsSubmit","userInput","WaypointListItem","waypoint","index","deleteDestination","WaypointList","waypointListArr","waypointsArr","map","key","WaypointsUI","setWaypointsArr","DirectionsListItem","html","direction","DOMParser","parseFromString","body","textContent","distance","text","DirectionsList","directions","directionsListArr","this","destination","time","count","setCount","container","document","getElementById","undefined","element","length","display","Directions","About","alt","src","Main","exact","path","component","require","config","App","endPoints","setDirections","useEffect","a","apiKey","process","waypointArr","waypoints","join","fetch","resp","restext","resJson","JSON","parse","alert","fetchDirections","Provider","start","end","i","newWaypoints","splice","createContext","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","URL","href","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.bf23bfc6.chunk.js","sourcesContent":["import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport '../styles.css'\n\nexport default function Header(props) {\n    return(\n        <nav>\n            <Link to={'/'} style={{textDecoration: 'none'}}>\n                <div><span id={'logo'} onClick={props.reset}>Tripn</span></div>\n            </Link>\n            <Link to={'/'} style={{textDecoration: 'none'}}>\n                <div onClick={props.reset}>Home</div>\n            </Link>\n            <Link to={'/about'} style={{textDecoration: 'none'}}>\n                <div>About</div>\n            </Link>\n        </nav>\n    )\n};","import React, {useState} from \"react\";\nimport {Redirect, withRouter} from \"react-router-dom\";\n\nfunction StartingLocationsForm(props) {\n    const [startingLocation, setStartingLocation] = useState('');\n    const [endingLocation, setEndingLocation] = useState('');\n    const [waypointRoute, setWaypointRoute] = useState('/');\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        props.handleSubmit(startingLocation, endingLocation);\n        setStartingLocation(\"\");\n        setEndingLocation('');\n        setWaypointRoute('/waypoints');\n    };\n\n    const handleStartingChange = e => {\n        const location = e.target.value;\n        setStartingLocation(location);\n    };\n\n    const handleEndingChange = e => {\n        const location = e.target.value;\n        setEndingLocation(location);\n    };\n\n    return (\n        <form onSubmit={handleSubmit} id={'starting-locations-form'}>\n            <div id={'starting-locations-container'}>\n                <div>\n                    <input\n                        className=\"starting-location-field\"\n                        type=\"text\"\n                        placeholder={'Starting Location'}\n                        value={startingLocation}\n                        onChange={handleStartingChange}\n                    />\n                </div>\n                <div>\n                    <input\n                        className=\"starting-location-field\"\n                        type=\"text\"\n                        placeholder={'Ending Location'}\n                        value={endingLocation}\n                        onChange={handleEndingChange}\n                    />\n                </div>\n            </div>\n            <input className={'starting-submit-button'} type=\"submit\" value=\"Start Tripn!\"/>\n            <Redirect to={`${waypointRoute}`} />\n        </form>\n    );\n}\n\nexport default withRouter(StartingLocationsForm);\n","import React, {useContext} from \"react\";\nimport StartingLocationsForm from \"./StartingLocationsForm\";\nimport { UniversalProps } from '../App'\n\nexport default function Home() {\n    const universalProps = useContext(UniversalProps);\n    return (\n        <StartingLocationsForm\n            setEndPoints={universalProps.setEndPoints}\n            handleSubmit={universalProps.handleEndpointsSubmit}\n        />\n    )\n}\n","import React, { useState } from \"react\";\n\nfunction Waypoints(props) {\n    const [input, setInput] = useState(\"\");\n\n    const handleChange = e => {\n        const userInput = e.target.value;\n        setInput(userInput);\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        props.handleWaypointsSubmit(input);\n        setInput(\"\");\n    };\n\n    return (\n        <div className=\"create-new\">\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    placeholder='Add a destination'\n                    onChange={handleChange}\n                    value={input}\n                />\n                <button>Add</button>\n            </form>\n        </div>\n    );\n}\n\nexport default Waypoints;\n","import React from \"react\";\nimport './waypointStyles.css'\n\nfunction WaypointListItem({ waypoint, index, deleteDestination }) {\n    return (\n        <div className=\"waypoint-item\">\n            <span className=\"name\">\n                <span>{waypoint}</span>\n            </span>\n            <span className=\"actions\">\n                <span>\n                    <button onClick={ () => deleteDestination(index) }>Remove</button>\n                </span>\n            </span>\n        </div>\n    );\n}\n\nexport default WaypointListItem;","import React from \"react\";\nimport WaypointListItem from \"./WaypointListItem\";\nimport './waypointStyles.css'\n\nfunction WaypointList(props) {\n    const waypointListArr = props.waypointsArr.map((waypoint, index) => {\n        return (\n            <WaypointListItem\n                waypoint={waypoint}\n                key={index}\n                index={index}\n                deleteDestination={props.deleteDestination}\n            />\n        );\n    });\n    return <div className=\"waypoints-list\">{waypointListArr}</div>;\n}\n\nexport default WaypointList;\n","import React, {useContext} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Waypoints from \"./Waypoints\";\nimport WaypointList from \"./WaypointList\";\nimport './waypointStyles.css'\nimport {UniversalProps} from \"../../App\";\n\nexport default function WaypointsUI() {\n    const universalProps = useContext(UniversalProps);\n    return(\n        <div>\n            <div id={'waypoints-headline'}>\n                <span>So many amazing places to see!</span>\n                <br/>\n                <span>Why not add a few?</span>\n            </div>\n            <Waypoints\n                handleWaypointsSubmit={universalProps.handleWaypointsSubmit}\n                setWaypointsArr={universalProps.setWaypointsArr}\n            />\n            <WaypointList\n                deleteDestination={universalProps.deleteDestination}\n                waypointsArr={universalProps.waypointsArr}\n            />\n            <Link to={'/directions'}>\n                <button id={'waypoints-finalize-button'}>Finalize Trip</button>\n            </Link>\n        </div>\n    )\n}\n","import React from \"react\";\nimport './directionsStyles.css';\n\nexport default function DirectionsListItem(props) {\n    //Below html stripping function from Sabaz on stackOverflow\n    function strip(html){\n        let doc = new DOMParser().parseFromString(html, 'text/html');\n        return doc.body.textContent || \"\";\n    }\n\n    let direction = strip(props['element']['html_instructions']);\n    let distance = props['element'].distance.text;\n    return (\n        <div className=\"directions-item\">\n            <span className={'direction-element'}>{direction}</span>\n            <span className={'distance-element'}>{distance}</span>\n        </div>\n    );\n}\n","import React, {useState} from \"react\";\nimport DirectionsListItem from \"./DirectionsListItem\";\nimport './directionsStyles.css'\n\nexport default function DirectionsList({directions}) {\n    let directionsListArr = this;\n    let destination = this;\n    let time = this;\n    let distance = this;\n    const [count, setCount] = useState(0);\n    const container = document.getElementById('end-directions-placeholder');\n\n    const handleCountIncrement = () => {\n        if (count < directions['routes'][0]['legs'].length) {\n            setCount(count + 1);\n            let tempCount = count + 1;\n            if (tempCount === directions['routes'][0]['legs'].length) {\n                container.style.display = \"block\";\n            }\n        }\n    };\n\n    const handleCountDecrement = () => {\n        if (count > 0) {\n            setCount(count - 1);\n            let tempCount = count - 1;\n            if (tempCount < directions['routes'][0]['legs'].length) {\n                container.style.display = \"none\";\n            }\n        }\n    };\n\n    if (directions['routes'] !== undefined) {\n        if (directions['routes'][0]['legs'][count] !== undefined) {\n            destination = directions['routes'][0]['legs'][count]['end_address'];\n            time = directions['routes'][0]['legs'][count]['duration']['text'];\n            distance = directions['routes'][0]['legs'][count]['distance']['text'];\n            let directionSteps = directions['routes'][0]['legs'][count]['steps'];\n            directionsListArr = directionSteps.map((e, index) => {\n                return (\n                    <DirectionsListItem element={e} key={index}/>\n                );\n            });\n        }\n    }\n    return(\n        <div id={'directions-list-container'}>\n            <div className={'destination-element'}>{destination}</div>\n            <div className={'distance-time-element'}><span>{time} </span><span> {distance}</span></div>\n            <div className=\"directions-list\">{directionsListArr}</div>\n            <button id={'directions-button'} onClick={handleCountDecrement}>Previous Destination</button>\n            <button id={'directions-button'} onClick={handleCountIncrement}>Next Destination</button>\n        </div>\n    )\n}\n","import React, {useContext} from \"react\";\nimport DirectionsList from \"./DirectionsList\";\nimport {UniversalProps} from \"../../App\";\nimport './directionsStyles.css'\n\nexport default function Directions() {\n    const universalProps = useContext(UniversalProps);\n    return(\n        <div>\n            <div id={'end-directions-placeholder'} style={{display: 'none'}}>\n                Looks like you're done Tripn. Time to start planning your next adventure!\n            </div>\n            <DirectionsList directions={universalProps.directions}/>\n        </div>\n    )\n}\n","import React from \"react\";\nimport '../styles.css'\n\nexport default function About() {\n    return(\n    <div id={'about-container'}>\n        <p id={'about-tagline'}>Find yourself somewhere new!</p>\n        <div id={'about-content-container'}>\n            <p className={'about-content'}>Tripn is a roadtrip planner and companion app to help you make the most of your\n                wanderlust adventures. Simply enter the location where you will begin your adventure as well as the\n                location that you are heading to. (This can be the same location for round trip experiences)</p>\n            <img\n                className={'about-image'}\n                alt={'home page'}\n                src={'https://res.cloudinary.com/bcantello/image/upload/v1585874451/Screen_Shot_2020-04-02_at_5.40.21_PM_z1p893.png'}>\n            </img>\n            <p className={'about-content'}>Next let's discover something new! There is so much to see between point A and point B, so let's add a few\n                stops along the way! Don't miss out on anything, and don't worry about what order you add\n                destinations to your list. Tripn takes care of all that so you can focus on dreaming up your perfect\n                trip.</p>\n            <img\n                className={'about-image'}\n                alt={'destinations page'}\n                src={'https://res.cloudinary.com/bcantello/image/upload/v1585875293/Screen_Shot_2020-04-02_at_5.54.37_PM_ws1i2x.png'}>\n            </img>\n            <p className={'about-content'}>Finalize your trip when you can't think of anything else you absolutely must see! Tripn will find the\n                optimal order to visit all of your destinations so that you can spend as much time as possible in the\n                places that matter most. Getting there is a snap with the turn by turn directions that are provided.\n                When you are ready to head to the next stop on your adventure, simply tap 'Next Destination' to pull up\n                your next set of directions. Easy as that! Happy Tripn!</p>\n            <img\n                className={'about-image'}\n                alt={'directions page'}\n                src={'https://res.cloudinary.com/bcantello/image/upload/v1585875964/Screen_Shot_2020-04-02_at_6.05.38_PM_lmaycm.png'}>\n            </img>\n        </div>\n    </div>\n    )\n}\n","import React from \"react\";\nimport {Route, Switch, Redirect} from \"react-router\";\nimport Home from \"./Home\";\nimport WaypointsUI from \"./Waypoints/WaypointsUI\";\nimport Directions from \"./Directions/Directions\";\nimport About from \"./About\";\n\nexport default function Main() {\n    return (\n        <Switch>\n            <Route exact path={'/'} component={Home} />\n            <Route path={'/waypoints'} component={WaypointsUI} />\n            <Route path={'/directions'} component={Directions} />\n            <Route path={'/about'} component={About} />\n            <Redirect to={'/'} />\n        </Switch>\n    );\n}\n","import React, {useEffect, useState, createContext} from 'react';\nimport './styles.css';\nimport Header from \"./Components/header\";\nimport Main from \"./Components/Main\";\n\nrequire('dotenv').config();\n\nfunction App() {\n    const [endPoints, setEndPoints] = useState([]);\n    const [directions, setDirections] = useState({});\n    const [waypointsArr, setWaypointsArr] = useState([]);\n\n    useEffect(() => {\n        const fetchDirections = async () => {\n            let proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n            const startingLocation = `&origin=${endPoints[0]}`;\n            const endingLocation = `&destination=${endPoints[1]}`;\n            const apiKey = `&key=${process.env.REACT_APP_TRIPN_GMAPS_API_KEY}`;\n            const url = 'https://maps.googleapis.com/maps/api/directions/json?';\n\n            const waypointArr = waypointsArr.map( waypoint => {\n                return ( waypoint=`|${waypoint}` );\n            });\n            const waypoints = `&waypoints=optimize:true|${waypointArr.join('')}`;\n\n            let resp = await fetch(`${proxyUrl}${url}${startingLocation}${endingLocation}${waypoints}${apiKey}`);\n            let restext = await resp.text();\n            try {\n                let resJson = JSON.parse(restext);\n                setDirections(resJson)\n            } catch (e) {\n                alert(`The application has encountered the following error: ${e}\n                Please close and restart the application.`)\n            }\n        };\n        fetchDirections();\n    }, [endPoints, waypointsArr]);\n\n    const handleEndpointsSubmit = (start, end) => {\n        setEndPoints([...endPoints, start, end]);\n    };\n\n    const handleWaypointsSubmit = (waypoint) => {\n        setWaypointsArr([...waypointsArr, waypoint]);\n    };\n\n    const deleteDestination = i => {\n        let newWaypoints = [...waypointsArr];\n        newWaypoints.splice(i, 1);\n        setWaypointsArr(newWaypoints);\n    };\n\n    const resetState = () => {\n        setWaypointsArr([]);\n        setEndPoints([]);\n    };\n\n    return (\n        <div className=\"App\">\n            <Header reset={resetState}/>\n            <div id={'main-content-container'}>\n                <UniversalProps.Provider value={\n                    {\n                    endPoints,\n                    setEndPoints,\n                    directions,\n                    setDirections,\n                    waypointsArr,\n                    setWaypointsArr,\n                    handleEndpointsSubmit,\n                    handleWaypointsSubmit,\n                    deleteDestination\n                    }\n                }>\n                    <Main/>\n                </UniversalProps.Provider>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\nexport const UniversalProps = createContext();\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nrequire('dotenv').config();\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}